using Discord;
using Discord.Interactions;
using Discord.WebSocket;

namespace DBotSharp.Commands;

public class ModCommands : InteractionModuleBase<SocketInteractionContext>
{
    [SlashCommand("mute", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Time-Out")]
    [RequireUserPermission(GuildPermission.MuteMembers)]
    public async Task Mute(
        [Summary("User", "–ö–∞–∫–æ–≥–æ —é–∑–µ—Ä–∞ –Ω–∞–¥–æ –Ω–∞–¥–æ –∑–∞–º—å—é—Ç–∏—Ç—å")] SocketGuildUser user, 
        [Summary("Time", "–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º—è —á–µ–ª–æ–≤–µ–∫ –±—É–¥–µ—Ç –Ω–∞–∫–∞–∑–∞–Ω(–≤ –º–∏–Ω—É—Ç–∞—Ö)")] int t = 20, 
        [Summary("Reason", "–ü—Ä–∏—á–∏–Ω–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏—è")] string reason = "[ - ]")
    {
        var answer = new EmbedBuilder()
            .WithDescription($"{user.Mention} is muted")
            .AddField("Moderator: ", $"{Context.User.Mention}", true)
            .AddField("Time: ", $"{t.ToString()} mins", true)
            .AddField("Reason: ", $"{reason}", true)
            .WithColor(Color.Red);
        
        await user.SetTimeOutAsync(TimeSpan.FromMinutes(t));
        await RespondAsync(embed: answer.Build());
    }

    [SlashCommand("unmute", "–°–Ω—è—Ç—å Time-Out —Å —é–∑–µ—Ä–∞")]
    [RequireUserPermission(GuildPermission.MuteMembers)]
    public async Task Unmute(
        [Summary("User", "–ö–æ–º—É –≤–µ—Ä–Ω—É—Ç—å –≥–æ–ª–æ—Å")] SocketGuildUser user,
        [Summary("Reason")] string reason = "[ - ]")
    {
        var answer = new EmbedBuilder()
            .WithDescription($"{user.Mention} is unmuted.")
            .AddField("Moderator: ", $"{Context.User.Mention}", true)
            .AddField("Reason: ", $"{reason}", true)
            .WithColor(new Color(237,223,178));
        
        await user.RemoveTimeOutAsync();
        await RespondAsync(embed: answer.Build());
    }

    [SlashCommand("nometa", "—Å—Å—ã–ª–∫–∞ –Ω–∞ Nometa")]
    public async Task Nometa()
    {
        var answer = new EmbedBuilder()
            .WithTitle("Don't use NOMETA!")
            .AddField("EN", 
                "NOMETA questions are introductory prompts like \"Is anyone here familiar with...\". " +
                "When someone responds, they have to wait for your actual question \n**\\- THIS IS BAD** :bangbang: " +
                "\n\n\\- Please respect others' time and patience üôè", 
                inline: false)
            .AddField("RU", 
                "Nometa –≤–æ–ø—Ä–æ—Å—ã - —ç—Ç–æ –≤–≤–æ–¥–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, —Ç–∏–ø–∞ \"–ï—Å—Ç—å –ª–∏ –∫—Ç–æ-—Ç–æ, –∫—Ç–æ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç—Å—è –≤...\". " +
                "–ö–æ–≥–¥–∞ –∫—Ç–æ-—Ç–æ –æ—Ç–∫–ª–∏–∫–∞–µ—Ç—Å—è –Ω–∞ —Ç–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å, –µ–º—É –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –∂–¥–∞—Ç—å, –ø–æ–∫–∞ –≤—ã —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π –≤–æ–ø—Ä–æ—Å \n**\\- –≠–¢–û –ü–õ–û–•–û** :bangbang:" +
                "\n\n\\- –¶–µ–Ω–∏—Ç–µ —á—É–∂–æ–µ –≤—Ä–µ–º—è –∏ –Ω–µ—Ä–≤—ã üôè", 
                inline: false)
            .WithColor(new Color(237,223,178));
        
        await RespondAsync(embed: answer.Build());
    }

    [SlashCommand("clear", "–æ—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç")]
    [RequireUserPermission(GuildPermission.ManageMessages)]
    public async Task Clear( [Summary("count" )] int count = 1)
    {
        var messages = await Context.Channel.GetMessagesAsync(count).FlattenAsync();
        foreach (var msg in messages)
            await msg.DeleteAsync();
        
        await RespondAsync($"{Context.User.Mention} deleted {count} messages.");
    }
}